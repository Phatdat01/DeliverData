version: "3.9"

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    env_file:
      - .env
    networks:
      - data_network

  mongodb:
    image: mongo:6-jammy
    container_name: mongodb
    restart: always
    env_file:
      - .env
    networks:
      - data_network

  zookeeper:
    image: wurstmeister/zookeeper
    # image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - data_network

  kafka:
    image: wurstmeister/kafka
    # image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT : zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: localhost
    depends_on:
      - zookeeper
    networks:
      - data_network

  pyspark_app:
    build:
      context: ./spark
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
    depends_on:
      - kafka
      - mongodb
      - mysql
    networks:
      - data_network

  # connector:
  #   image: debezium/connect
  #   environment:
  #     - BOOTSTRAP_SERVERS=kafka:9092
  #     - GROUP_ID=1
  #     - CONFIG_STORAGE_TOPIC=my_connect_configs
  #     - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #     - STATUS_STORAGE_TOPIC=my_connect_statuses
  #   ports:
  #     - 8083:8083
  #   depends_on:
  #     - kafka
  #     - mongodb

networks:
  data_network:
    driver: bridge
    name: data_network